box_ids = [
	'auxwcbzrmdvpsjfgkrthnkioqm',
	'auxwcbzrmdvpsjfgbltonyijqe',
	'auxwcbzrmdfpsefgklthnoioqe',
	'auxwcbzrmdvpsjfgkluhnjisqe',
	'auxwcbzrmdvesjfgdzthnyioqe',
	'auxwcbzrmdvhsjfgklthnmijqe',
	'auxwcbzridvpsjfgkltxeyioqe',
	'ayxwcbzrgdvpsjfgklthiyioqe',
	'ajxwcbzrmdvpsjfgklkhnyiode',
	'auxwcbcrmdvpsjfqelthnyioqe',
	'auxwcbzrmsvpsjsgklthnyiope',
	'auxwcbzrmqvpsjzgklghnyioqe',
	'auxwcbzrmdvpsjtqklthxyioqe',
	'auxwcbzrmdopsjfdklthncioqe',
	'auxwcbzrmdvpsjfgkltmhyfoqe',
	'aixwcbzrmdvpsjfgllthdyeoqe',
	'vuxicbzrmdepsjfgklthnyioqe',
	'auxwcbbxmdkpsjfgklthnyioqe',
	'auxwcbzrgdvpsofaklthnyioqe',
	'auxycbzrmdvpsjfgklthnyuose',
	'aujwcbzrmdvprjfgkltcnyioqe',
	'auxwgbzrmdvpsjfgyzthnyioqe',
	'auxwcbzrmavpsjfgkltsnyiome',
	'auxwcbgrmdvpsjfgkdthnrioqe',
	'kuxwcbzrmdvpsyfgklthnyioue',
	'auxwcbzomdvpjdfgklthnyioqe',
	'auxwcbzrmdppsjfgklthvyifqe',
	'aunwubzrmdvpsjrgklthnyioqe',
	'auxwcbzrmoipsjfgklbhnyioqe',
	'auxwdbzrmdvpsjfgmlthnyioce',
	'auxwcbzjmsvpsjfiklthnyioqe',
	'auxwcbzrmwcpsjfcklthnyioqe',
	'auxwcbzfmdvprjfhklthnyioqe',
	'auxdcbzrgdvpsjfgklthnyxoqe',
	'wuxwbbzrmdvpsjfgklthnyiote',
	'auowcbjrmdvpsjfgklthnyfoqe',
	'auxwsbzrmdvpsjfglltcnyioqe',
	'quxwcbzrmdvpkjfgklthnyioqt',
	'vuxwcbzrudvpsjfgklthnyioqi',
	'puxwcbzrmdvgsjfgklthncioqe',
	'luxdcbzrmdvpsjfgkothnyioqe',
	'auxwcbzrmdvpsjfyklthfhioqe',
	'auxwcbqrmdvpsjfgkldhnyiote',
	'quxwcbzrmlvpsjfgklthnyioqi',
	'auxwcbzgmdvpsjfoklthnyiuqe',
	'auxwcbzrmdvpsbfgkltdjyioqe',
	'auxwcbzsmdrpsjfgklthpyioqe',
	'auxwcbzrmfvpsjfwklthnyiote',
	'auxbkpzrmdvpsjfgklthnyioqe',
	'auxwcbzrddvpsjfsklthnyroqe',
	'abxwcbzrmdvpsjfgkltdnyivqe',
	'awxwcbzrmvvpsjfgklthngioqe',
	'auxwcbzrmkvgsjfgkltcnyioqe',
	'auxwcbammdvpsjfgklthpyioqe',
	'auxwcbhrmdvpsjfgtlthnuioqe',
	'auxwcpzrmdvpbjogklthnyioqe',
	'auxwcbzrmdvpslfgklbhkyioqe',
	'auxwcbsrmdvpjjfgkldhnyioqe',
	'auxwcbzrmdqpsjfgauthnyioqe',
	'ydxwcbxrmdvpsjfgklthnyioqe',
	'auxwcbzrmdvpejfgklthnyyofe',
	'auxwchzrmxvpsjfgklthnyioqh',
	'auxwcbzrtdvpsjfgklxhnzioqe',
	'auxwcbyrmdvpsnfgklnhnyioqe',
	'auxwcbzrcdvpsjugklihnyioqe',
	'auxwcbzrddvpsjfgklhhnyiaqe',
	'aumwtbzrmdvpsjfgklthnyitqe',
	'auxucbzrmdvpsjfgklthwfioqe',
	'auxwcbzrmdvpzmfgkllhnyioqe',
	'auxwcbzrmdvpsjhgklthntiome',
	'buxwzbzrmdvpszfgklthnyioqe',
	'ouxwcbzsgdvpsjfgklthnyioqe',
	'auxwcbzrmdvpsjfskltgnyioqz',
	'auxwcbbrmdvpsjftklthnyioqu',
	'quxocbzrmdvpsjfgklthfyioqe',
	'acxwcbzrmdvpsjfgklfhnrioqe',
	'auxwcbzrmdnpsjfrkjthnyioqe',
	'wuxwybzrmdwpsjfgklthnyioqe',
	'auxwgbxrmdvpsjfghlthnyioqe',
	'atxwcbzrmdvnsjfgklthnyjoqe',
	'acxwcbzmmdvpsjfbklthnyioqe',
	'auxhcbzrmdvbsjbgklthnyioqe',
	'auxwlbzrfdvpsjfgxlthnyioqe',
	'auxwmbzrmdfpsjqgklthnyioqe',
	'auxwcbzrmdvpsgfgklahnyigqe',
	'auxwgbzrmdvpsjfgzldhnyioqe',
	'auxwcbzrmdvpydfgklthnyiohe',
	'auxwxbzrmdvpsjfsklchnyioqe',
	'auxqcbzrmdvpsjfgqlthnyiwqe',
	'auxwcozrmdvssbfgklthnyioqe',
	'auxvcczrmdvpsufgklthnyioqe',
	'auxwcbzrudvpsjfgklyhnyioxe',
	'aulwcbzrmdvpsjqgknthnyioqe',
	'auukcbzrmdvpsjfgklthtyioqe',
	'auxwcszimdvpsjfgklthnyigqe',
	'juxwcbzrbdvpsjfgklthnyboqe',
	'auxwcbzrmdvpjofgklthnyioqj',
	'auxwcbzrmdvpsjfgplfhnyione',
	'auxwcbzrmdhpsjfgkltknyeoqe',
	'luxwcqzrmdvpsjfgklthnbioqe',
	'uuxwcbzrmdvpsjfgkithnyiiqe',
	'auxwcbzrmdvpdjfgkrthnyeoqe',
	'auuwcbnrmdvpsjfgklthnjioqe',
	'auxwcnzrmdvpsjvgklthnyooqe',
	'auxwcbzcmdvpsjfcklthnyiose',
	'auxwcbzrldfpsjfgklthjyioqe',
	'auxwcizrmdvpsjfjklthnymoqe',
	'auxwcbtrmdvpsjfgtlphnyioqe',
	'amxwcbzrmdvksjfgklthnyiove',
	'auxwcbzrmdvpszfgkpthnyiuqe',
	'auxwcbzrmdvxdjfgkltqnyioqe',
	'auxwcbzrudvpsjfgklthnymiqe',
	'auxwcbirmdvfsjfgklmhnyioqe',
	'auwwcbzrndvprjfgklthnyioqe',
	'auxwcbormdgpsjfgklbhnyioqe',
	'auxwabzrmdupsjfgklthnyioqt',
	'auxvcbzrmdvpsjfgkltrmyioqe',
	'auxwcbzrmddpsjfsklthnyizqe',
	'auxwcczrmuvpyjfgklthnyioqe',
	'auxwcczrmdvpsnfgkpthnyioqe',
	'auxkcbzrmdvpsjfhklihnyioqe',
	'auxwcbzrmdvpsjfgklthnkijje',
	'auxwcbzcmdvpsjpgkldhnyioqe',
	'auxwcnzrudvpstfgklthnyioqe',
	'xuxwcbzrgdvusjfgklthnyioqe',
	'aaxwcbzrmdvpsjvgklthnyidqe',
	'auxwcbztmdvpsjfgklthnyhqqe',
	'auxwcbzrmfvpsjfgklthnyilfe',
	'auxwcbzrmdvksjfgklthjyioqq',
	'auxwcbzrmdzksjfgktthnyioqe',
	'auxwcbzrmfvpszfgklohnyioqe',
	'auxwckzamdvpsjfgklthnyioqs',
	'auxwcmzrhdvpsjfaklthnyioqe',
	'fuxwcbzrmdapsjfgklrhnyioqe',
	'avxwxbzrmdvpsjfgklthniioqe',
	'auxwubzrmevpsjfgkltpnyioqe',
	'fuxwcbzrgdvpsjfgklhhnyioqe',
	'duxwwbdrmdvpsjfgklthnyioqe',
	'audwcbzrmdvpnjcgklthnyioqe',
	'auxtcbzrmdvpsjmgklthnyyoqe',
	'aucwcbwrmdepsjfgklthnyioqe',
	'auxwcbzrudvpsjfpklthnyiose',
	'auxwcbzridvpsjfsklthxyioqe',
	'auxtcbzrmdvpscfgklyhnyioqe',
	'auxwcbzrmdvppjfgklthnyivee',
	'auxwdbzrmuvpskfgklthnyioqe',
	'auxwubzrmdvosjfgklthnyiope',
	'auxwcbzrmhnpsjfgklthnyimqe',
	'auxwcbzrmdqpwjfgkltpnyioqe',
	'auxwcbormdvpsjljklthnyioqe',
	'auxwcbzrmdjpsjfgkltjpyioqe',
	'auxwcbzrmdvpszfgklthkyizqe',
	'auxwcbzighvpsjfgklthnyioqe',
	'auxwcbzrmdlpsjfgcythnyioqe',
	'auxwcbzumdvpsjflklthnyimqe',
	'pdxwcbzrmdvpsjfgklthnyihqe',
	'auxwcbzrsdvpsjfgklhhvyioqe',
	'auxwcfzamdvpsjfgkmthnyioqe',
	'aexwcdzrmdvpsjogklthnyioqe',
	'auxxcbkrmavpsjfgklthnyioqe',
	'auxwcbzredvssjfgklthryioqe',
	'aupwqbzrmdvpsjfgklthnyioqc',
	'auxwcbzrmdvpkcagklthnyioqe',
	'auxwcbzrmdvwsbfgklthnlioqe',
	'aunwcbzxmdvhsjfgklthnyioqe',
	'auxwcbzrhddpsjfgklthnnioqe',
	'ouxwcbzrmdvtsifgklthnyioqe',
	'auxwcbzrmdqpsjfgklthnyfoqp',
	'auxwrbzrhdvpsjfgolthnyioqe',
	'auxwcbcqmdvpsjugklthnyioqe',
	'auxwcbzrqdvpsjhgklthnjioqe',
	'auxmcbzrmdvpsjfgmlthnyjoqe',
	'auxwcbzrmdvpsjfgzlthnycoqv',
	'auswcbzrmdvpsffgslthnyioqe',
	'auxwcbzrfdvpsjfrmlthnyioqe',
	'auxwcbzrmdvpsjngzlthnxioqe',
	'auxwcbzrmdvpsjfuqlthnyiyqe',
	'auxwzbzrrdvosjfgklthnyioqe',
	'auxwcbzdmdvpsjfikxthnyioqe',
	'guxwcbzrmdvpsjfgmlthnytoqe',
	'auxwcbzrmdvpspfgkytenyioqe',
	'auxvcbzrldvpsjfgklthnyhoqe',
	'auxwcbzrmavpckfgklthnyioqe',
	'autwcbzrmdvpsafgklthnyirqe',
	'auxwcbzrxuvpsjfgklthmyioqe',
	'auxwcbarmdppsjfgklthnywoqe',
	'anxvcbzrmdvpsjfgklthnyijqe',
	'auxwcbwrmdapsjngklthnyioqe',
	'abxwcbzrmdvpsjugkltgnyioqe',
	'auxwcbtrmdvpsjfgkltunyioue',
	'aujwcbzrmovpsjfgklthryioqe',
	'auxwcbzrydvpsjfgklthndikqe',
	'auxwcbzrmdvpsjfgklmrnyioqo',
	'auxwcbzrddvpsjfggithnyioqe',
	'auxwcbzrmdvpfjfaklthlyioqe',
	'fuxtcbzrmdvpsjfgklwhnyioqe',
	'tuxwcbzrjdvpsjfgjlthnyioqe',
	'auxwcbzrmdppsofgklthnyfoqe',
	'auxvclzamdvpsjfgklthnyioqe',
	'auxwcbzrmdvpsjfdklhhnzioqe',
	'auxwcbzrmsvpsvdgklthnyioqe',
	'arxfcbzrmdvpsvfgklthnyioqe',
	'auxzcbzrmdvpsjfgklthnhioqj',
	'auxwcbzrrdvpsjfgpltunyioqe',
	'auxuibzrmdvpwjfgklthnyioqe',
	'auxwcbzrwdqpsjfgklthnyooqe',
	'aujwcbzrmdvpsjvgklthxyioqe',
	'abxwcbzrmfvpsjfgklthnyxoqe',
	'aurwcbzrmdvpshfgklthnyhoqe',
	'auxwcbzjmdvpsjfgknthnycoqe',
	'auxwcbzrmdvpsjfgklmhxwioqe',
	'auxwcbzrmfvpsjfgklthnyiorq',
	'auxwcbormdvpsjfgklwhnlioqe',
	'auxwctzrmdvpsjfgklcknyioqe',
	'awxwcbzrmdvpsjfgvlthnyiome',
	'auxwcbzrmdvpsjfjklthnyixje',
	'auxwcsxrmdvpsjfgkltsnyioqe',
	'auxbmbzrmdvpsjfgklthnyioce',
	'auxwcbzrmdvpsjfukzthnytoqe',
	'aixwcbzrmdvpsjfgllthdyioqe',
	'auxwcbzrmdypsjfgklthnlioqy',
	'auxccbzrmdvpsjfgkltrnnioqe',
	'auxwcznrmdvpsjfgklthnykoqe',
	'auxwmqzrmdvpsjfgilthnyioqe',
	'auxwcbzrmdvpdyfgolthnyioqe',
	'auxwcbzrmdvpsjfgkmohnqioqe',
	'auxwcfzrmzvpsjfoklthnyioqe',
	'auxwjyzrmdvpsjfgulthnyioqe',
	'auxwcgzredvpsjfgkxthnyioqe',
	'wuxwcbtrmdvpsjfgklthnyiofe',
	'auxwcbzrmdopsgfgklthncioqe',
	'auxmcbzjmdvpsjfgklbhnyioqe',
	'auxwlbzrmdvpsjffklthgyioqe',
	'auxwcbzrmrvpsjfgqlthtyioqe',
	'kuxwhbzrmdvpsjfgklthgyioqe',
	'auxwcozrmdgpsjfgklthnydoqe',
	'auxwdbzrmdvpdjfgklthgyioqe',
	'auxwqbzrmdapsvfgklthnyioqe',
	'auqwcbzridvjsjfgklthnyioqe',
	'auxwckzrmdvpsjfoklthnyuoqe',
	'auxwcbzvmdvpsjfgklghnyiome',
	'auxtcbzrmdvpsjqgktthnyioqe',
	'auxwcbzrmdvesjfgkljhnnioqe',
	'auxwcbzrmpvpsqfgklthnqioqe',
	'auxwcbzrmdcpsqfgklthnzioqe',
	'yuxwcbzrmdvpsjggklthnlioqe',
	'auxwcbzradvpsjftklthoyioqe',
	'auxwcbzrmdvjujfgklmhnyioqe',
	'auxwcbzrmdvpsrfgklpinyioqe',
	'auxwobzrvqvpsjfgklthnyioqe'
]

import string
from multiprocessing import Pool
from time import time

def count_letters(text):
	two_letters = 0
	three_letters = 0

	for char in string.ascii_lowercase:
		char_count = text.count(char)

		if char_count == 2:
			two_letters = 1
		if char_count == 3:
			three_letters = 1

	return two_letters, three_letters

if __name__ == '__main__':
	start_time = time()

	process_pool = Pool(4)
	letter_counts = process_pool.map(count_letters, box_ids)

	two_letters = 0
	three_letters = 0
	for counts in letter_counts:
		two_letters += counts[0]
		three_letters += counts[1]

	print(two_letters * three_letters)
	print('Finished in', time() - start_time)
